{"version":3,"sources":["components/Button.js","components/ReviewDB.js","components/Header.js","components/Viewer3d.js","components/Constraints.js","components/HeaderExec.js","components/Map.js","App.js","index.js"],"names":["Button","text","onClickx","color","className","style","backgroundColor","onClick","defaultProps","scene3d","camera3d","renderer3d","Header","title","show","lineArr","meshArr","width","height","getColor","t","addFloors","poly","ht_inp","push","i","length","pts","THREE","x","y","z","g","setFromPoints","m","me","j","me2","clone","position","genShape","op","type","colr_","s","moveTo","lineTo","autoClose","e","steps","depth","bevelEnabled","opacity","transparent","wireframe","ReviewDB","getDbData","useState","dbIndex","setDbIndex","useEffect","generate3dView","setDbIndexFunc","val","document","getElementById","value","console","log","DIV","children","removeChild","firstChild","background","set","up","setSize","appendChild","domElement","light1","add","addLight","dataFromServerInp","forEach","geometry","dispose","material","remove","k","resPartitions","sumAR","sumHT","num","res","parcel","area","building_height","maxHT","minAR","ar","ht","footprint_poly_points","err","sitePoly","draw3d","data","axes","OrbitControls","addEventListener","aspect","updateProjectionMatrix","animate","requestAnimationFrame","render","id","min","max","onChange","target","Viewer3d","setDataFromServer","idx","sendToDB","a","fetch","method","headers","body","JSON","stringify","json","Constraints","onGetConstraints","peripheral","setPeripheral","subdivision","setSubdivision","number","setNumParcels","fsr","setFsr","floorHeight","setFlrHt","peripheralDepth","setPeripheralDepth","setback","setSetback","deviation","setDeviation","courtyard_depth","setCourtyardDepth","courtyard_number","setNumCourtyard","onSubmit","preventDefault","parseInt","parseFloat","placeholder","HeaderExec","btnTitle","Map","onGetMapPolyCoords","setMapLayers","plotCoords","setPlotCoords","lat","lng","center","processCoords","ptCoords","plotPtCoords","p0","sumX","sumY","p","p1","toFixed","cenX","cenY","transformPlotPtCoords","p2","mirrorXPts","u","norm","v","dp","P","MapContainer","zoom","FeatureGroup","onCreated","layerType","layer","_leaflet_id","layers","latlngs","getLatLngs","T","point","L","CRS","EPSG3857","project","latLng","onEdited","_layers","lArr","Object","values","editing","onDeleted","map","filter","l","draw","rectangle","polyline","circle","marker","circlemarker","TileLayer","attribution","url","App","solverData","setSolverData","dbData","setDbData","showConstraints","setShowConstraints","showMap","setShowMap","showViewer","setShowViewer","showDbReview","setShowDbReview","constraints","setConstraints","polygon","setPolygon","combinedConstraints","setCombinedConstraints","GetDataFromDBFunc","GenerateSolution","GetOutputFromDB","inpConstraint","inpCoords","div","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.dae1bae7.chunk.js","sourcesContent":["import React from 'react';\n\nconst Button = ({ text, onClickx, color }) => {\n\treturn (\n\t\t<div>\n\t\t\t<button\n\t\t\t\tclassName='btn'\n\t\t\t\tstyle={{ backgroundColor: color }}\n\t\t\t\tonClick={onClickx}>\n\t\t\t\t{text}\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nButton.defaultProps = {\n\tcolor: 'steelblue',\n\ttext: 'Button',\n};\nexport default Button;\n","import React, { useState, useEffect } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\n\nvar lineArr = [];\nvar meshArr = [];\nvar scene3d, camera3d, renderer3d, controls3d;\nconst width = 400;\nconst height = 400;\n\nfunction addLight() {\n\tlet light1 = new THREE.AmbientLight(0xffffff);\n\tscene3d.add(light1);\n}\nfunction getColor(t = 0) {\n\tif (t === 0) return 0xff5e10;\n\telse if (t === 1) return 0xff7ea0;\n\telse if (t === 2) return 0xdd7e00;\n\telse return 0xffffff;\n}\nfunction genCentroid(p) {\n\tlet g = new THREE.SphereGeometry(2.5, 30, 30);\n\tlet m = new THREE.MeshPhongMaterial({ color: 0xff0dee });\n\tlet me = new THREE.Mesh(g, m);\n\tme.position.set(p.x, p.y, 0);\n\tmeshArr.push(me);\n}\nfunction addFloors(poly, ht_inp) {\n\tpoly.push(poly[0]);\n\tfor (let i = 0; i < poly.length - 1; i++) {\n\t\tlet a = new THREE.Vector3(poly[i].x, poly[i].y, poly[i].z);\n\t\tlet b = new THREE.Vector3(poly[i + 1].x, poly[i + 1].y, poly[i + 1].z);\n\t\tlet pts = [a, b];\n\t\tlet g = new THREE.BufferGeometry().setFromPoints(pts);\n\t\tlet m = new THREE.LineBasicMaterial({ color: 0x000000 });\n\t\tlet me = new THREE.Line(g, m);\n\t\tfor (let j = 0; j < ht_inp; j += 3) {\n\t\t\tlet me2 = me.clone();\n\t\t\tme2.position.z = j;\n\t\t\tlineArr.push(me2);\n\t\t}\n\t}\n}\nfunction genShape(poly, ht_inp, colr = 0, op = 0.75, t, type) {\n\tif (type !== 'site') {\n\t\taddFloors(poly, ht_inp);\n\t}\n\tlet colr_ = 0x000000;\n\tif (type === 'peripheral') {\n\t\tcolr_ = getColor(0);\n\t} else if (type === 'partition') {\n\t\tcolr_ = getColor(1);\n\t} else if (type === 'courtyard') {\n\t\tcolr_ = getColor(2);\n\t} else if (type === 'site') {\n\t\tcolr_ = getColor(3);\n\t}\n\tlet s = new THREE.Shape();\n\ts.moveTo(poly[0].x, poly[0].y);\n\tfor (let i = 1; i < poly.length; i++) {\n\t\ts.lineTo(poly[i].x, poly[i].y);\n\t}\n\ts.autoClose = true;\n\tvar e = {\n\t\tsteps: 1,\n\t\tdepth: ht_inp,\n\t\tbevelEnabled: false,\n\t};\n\tvar g = new THREE.ExtrudeGeometry(s, e);\n\tvar m = new THREE.MeshPhongMaterial({\n\t\tcolor: colr_,\n\t\topacity: op,\n\t\ttransparent: true,\n\t\twireframe: t,\n\t});\n\tvar me = new THREE.Mesh(g, m);\n\tmeshArr.push(me);\n}\nfunction draw3d(dataFromServerInp) {\n\tmeshArr.forEach((me) => {\n\t\tme.geometry.dispose();\n\t\tme.material.dispose();\n\t\tscene3d.remove(me);\n\t});\n\tlineArr.forEach((me) => {\n\t\tme.geometry.dispose();\n\t\tme.material.dispose();\n\t\tscene3d.remove(me);\n\t});\n\tlineArr = [];\n\tmeshArr = [];\n\tconsole.log(dataFromServerInp);\n\t/* let data = dataFromServerInp; */\n\tlet k = 0;\n\ttry {\n\t\tlet resPartitions = dataFromServerInp['partitions'];\n\t\tlet sumAR = 0;\n\t\tlet sumHT = 0;\n\t\tlet num = 0;\n\t\tresPartitions.forEach((res) => {\n\t\t\tsumAR += res.parcel.area;\n\t\t\tsumHT += res.parcel.building_height;\n\t\t\tnum++;\n\t\t});\n\t\tlet maxHT = (sumHT * 10.0) / num;\n\t\tlet minAR = (sumAR * 0.1) / num;\n\n\t\tresPartitions.forEach((res) => {\n\t\t\tlet obj = resPartitions[k];\n\t\t\tlet ar = res.parcel.area;\n\t\t\tlet ht = res.parcel.building_height;\n\t\t\tlet type = res.parcel.type;\n\t\t\t// genShape(res.parcel.parcel_poly_points, 0.25, 1, 0.75, false, type);\n\t\t\t// genCentroid(res.parcel.centroid);\n\t\t\ttry {\n\t\t\t\tif (type === 'peripheral' || type === 'courtyard') {\n\t\t\t\t\tgenShape(res.parcel.footprint_poly_points, ht, 0, 0.75, false, type);\n\t\t\t\t} else if (type === 'partition' && ht < maxHT && ar > minAR) {\n\t\t\t\t\tgenShape(res.parcel.footprint_poly_points, ht, 0, 0.75, false, type);\n\t\t\t\t}\n\t\t\t} catch (err) {}\n\t\t\tk++;\n\t\t});\n\t} catch (err) {\n\t\t//console.log('Error!!!');\n\t}\n\ttry {\n\t\tlet sitePoly = dataFromServerInp['site'];\n\t\tconsole.log(sitePoly);\n\t\tlet s = new THREE.Shape();\n\t\ts.moveTo(sitePoly[0].x, sitePoly[0].y);\n\t\tfor (let i = 1; i < sitePoly.length; i++) {\n\t\t\ts.lineTo(sitePoly[i].x, sitePoly[i].y);\n\t\t}\n\t\ts.autoClose = true;\n\t\tvar e = {\n\t\t\tsteps: 1,\n\t\t\tdepth: 12.5,\n\t\t\tbevelEnabled: false,\n\t\t};\n\t\tvar g = new THREE.ExtrudeGeometry(s, e);\n\t\tvar m = new THREE.MeshPhongMaterial({\n\t\t\tcolor: 0x777000,\n\t\t\topacity: 0.5,\n\t\t\ttransparent: true,\n\t\t\twireframe: false,\n\t\t});\n\t\tvar me = new THREE.Mesh(g, m);\n\t\tme.position.z = -12.5;\n\t\t// me.scale.set(2, 2, 2);\n\t\tmeshArr.push(me);\n\t} catch (err) {}\n\tmeshArr.forEach((me) => {\n\t\tscene3d.add(me);\n\t});\n\tlineArr.forEach((me) => {\n\t\tscene3d.add(me);\n\t});\n}\n\n//\n// \tMAIN component block\n//\nconst ReviewDB = ({ getDbData }) => {\n\tconst [dbData, setDbData] = useState(getDbData);\n\tconst [dbIndex, setDbIndex] = useState(0);\n\n\tuseEffect(() => {\n\t\tgenerate3dView();\n\t\tsetDbIndexFunc();\n\t}, [dbIndex]);\n\n\tconst setDbIndexFunc = () => {\n\t\tlet val = document.getElementById('dbIndexSlider').value;\n\t\tsetDbIndex(val);\n\t\tconsole.log('db index', dbIndex);\n\t};\n\n\tconst generate3dView = () => {\n\t\t// console.log(getDbData);\n\t\tvar DIV = document.getElementById('viewerDBDiv3d');\n\t\twhile (DIV.children.length > 0) {\n\t\t\tDIV.removeChild(DIV.firstChild);\n\t\t}\n\t\t//\n\t\tscene3d = new THREE.Scene();\n\t\tscene3d.background = new THREE.Color('#ffffff');\n\t\tcamera3d = new THREE.PerspectiveCamera(45, width / height, 0.01, 100000);\n\t\tcamera3d.position.set(250, 250, 550);\n\t\tcamera3d.up = new THREE.Vector3(0, 0, 1);\n\t\trenderer3d = new THREE.WebGLRenderer();\n\t\trenderer3d.setSize(width, height);\n\t\tDIV.appendChild(renderer3d.domElement);\n\t\taddLight();\n\t\t//\n\t\tdraw3d(getDbData[dbIndex].data);\n\t\t//\n\t\tlet axes = new THREE.AxesHelper(150);\n\t\tscene3d.add(axes);\n\t\tvar updateWindow = () => {\n\t\t\tcamera3d.aspect = width / height;\n\t\t\tcamera3d.updateProjectionMatrix();\n\t\t\trenderer3d.setSize(width, height);\n\t\t};\n\t\tcontrols3d = new OrbitControls(camera3d, renderer3d.domElement);\n\t\tcontrols3d.addEventListener('onchange', updateWindow);\n\t\tanimate();\n\t};\n\n\tvar animate = function () {\n\t\trequestAnimationFrame(animate);\n\t\trenderer3d.render(scene3d, camera3d);\n\t};\n\n\tvar getdbindex = (e) => {\n\t\tsetDbIndex(e.target.value);\n\t\tconsole.log(dbIndex);\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<h1>Review Entries in Database </h1>\n\t\t\t<br />\n\t\t\t<table>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<label> Select Database Entry to Display</label>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tid='dbIndexSlider'\n\t\t\t\t\t\t\t\ttype='range'\n\t\t\t\t\t\t\t\tmin='0'\n\t\t\t\t\t\t\t\tmax={dbIndex.length}\n\t\t\t\t\t\t\t\tvalue={dbIndex}\n\t\t\t\t\t\t\t\tonChange={getdbindex}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t\t<br />\n\t\t</div>\n\t);\n};\n\nexport default ReviewDB;\n","import Button from './Button';\n\nconst Header = ({ title, onClickx, show }) => {\n\treturn (\n\t\t<div className='header'>\n\t\t\t<h2> {title} </h2>\n\t\t\t<Button\n\t\t\t\tonClickx={onClickx}\n\t\t\t\ttext={show ? 'Hide' : 'Show'}\n\t\t\t\tcolor={show ? 'blue' : 'green'}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default Header;\n","import { useState, useEffect } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\n\nvar lineArr = [];\nvar meshArr = [];\nvar scene3d, camera3d, renderer3d, controls3d;\nconst width = 400,\n\theight = 400;\n\nfunction addLight() {\n\tlet light1 = new THREE.AmbientLight(0xffffff);\n\tscene3d.add(light1);\n}\nfunction getColor(t = 0) {\n\tif (t === 0) return 0xff5e10;\n\telse if (t === 1) return 0xff7ea0;\n\telse if (t === 2) return 0xdd7e00;\n\telse return 0xffffff;\n}\nfunction genCentroid(p) {\n\tlet g = new THREE.SphereGeometry(2.5, 30, 30);\n\tlet m = new THREE.MeshPhongMaterial({ color: 0xff0dee });\n\tlet me = new THREE.Mesh(g, m);\n\tme.position.set(p.x, p.y, 0);\n\tmeshArr.push(me);\n}\nfunction addFloors(poly, ht_inp) {\n\tpoly.push(poly[0]);\n\tfor (let i = 0; i < poly.length - 1; i++) {\n\t\tlet a = new THREE.Vector3(poly[i].x, poly[i].y, poly[i].z);\n\t\tlet b = new THREE.Vector3(poly[i + 1].x, poly[i + 1].y, poly[i + 1].z);\n\t\tlet pts = [a, b];\n\t\tlet g = new THREE.BufferGeometry().setFromPoints(pts);\n\t\tlet m = new THREE.LineBasicMaterial({ color: 0x000000 });\n\t\tlet me = new THREE.Line(g, m);\n\t\tfor (let j = 0; j < ht_inp; j += 3) {\n\t\t\tlet me2 = me.clone();\n\t\t\tme2.position.z = j;\n\t\t\tlineArr.push(me2);\n\t\t}\n\t}\n}\nfunction genShape(poly, ht_inp, colr = 0, op = 0.75, t, type) {\n\tif (type !== 'site') {\n\t\taddFloors(poly, ht_inp);\n\t}\n\tlet colr_ = 0x000000;\n\tif (type === 'peripheral') {\n\t\tcolr_ = getColor(0);\n\t} else if (type === 'partition') {\n\t\tcolr_ = getColor(1);\n\t} else if (type === 'courtyard') {\n\t\tcolr_ = getColor(2);\n\t} else if (type === 'site') {\n\t\tcolr_ = getColor(3);\n\t}\n\tlet s = new THREE.Shape();\n\ts.moveTo(poly[0].x, poly[0].y);\n\tfor (let i = 1; i < poly.length; i++) {\n\t\ts.lineTo(poly[i].x, poly[i].y);\n\t}\n\ts.autoClose = true;\n\tvar e = {\n\t\tsteps: 1,\n\t\tdepth: ht_inp,\n\t\tbevelEnabled: false,\n\t};\n\tvar g = new THREE.ExtrudeGeometry(s, e);\n\tvar m = new THREE.MeshPhongMaterial({\n\t\tcolor: colr_,\n\t\topacity: op,\n\t\ttransparent: true,\n\t\twireframe: t,\n\t});\n\tvar me = new THREE.Mesh(g, m);\n\tmeshArr.push(me);\n}\nfunction draw3d(dataFromServerInp, idx) {\n\tmeshArr.forEach((me) => {\n\t\tme.geometry.dispose();\n\t\tme.material.dispose();\n\t\tscene3d.remove(me);\n\t});\n\tlineArr.forEach((me) => {\n\t\tme.geometry.dispose();\n\t\tme.material.dispose();\n\t\tscene3d.remove(me);\n\t});\n\tlineArr = [];\n\tmeshArr = [];\n\t/* let data = dataFromServerInp; */\n\tconsole.log(dataFromServerInp[idx]);\n\tlet k = 0;\n\ttry {\n\t\tlet resPartitions = dataFromServerInp['partitions'];\n\t\tlet sumAR = 0;\n\t\tlet sumHT = 0;\n\t\tlet num = 0;\n\t\tresPartitions.forEach((res) => {\n\t\t\tsumAR += res.parcel.area;\n\t\t\tsumHT += res.parcel.building_height;\n\t\t\tnum++;\n\t\t});\n\t\tlet maxHT = (sumHT * 10.0) / num;\n\t\tlet minAR = (sumAR * 0.1) / num;\n\n\t\tresPartitions.forEach((res) => {\n\t\t\tlet obj = resPartitions[k];\n\t\t\tlet ar = res.parcel.area;\n\t\t\tlet ht = res.parcel.building_height;\n\t\t\tlet type = res.parcel.type;\n\t\t\t// genShape(res.parcel.parcel_poly_points, 0.25, 1, 0.75, false, type);\n\t\t\t// genCentroid(res.parcel.centroid);\n\t\t\ttry {\n\t\t\t\tif (type === 'peripheral' || type === 'courtyard') {\n\t\t\t\t\tgenShape(res.parcel.footprint_poly_points, ht, 0, 0.75, false, type);\n\t\t\t\t} else if (type === 'partition' && ht < maxHT && ar > minAR) {\n\t\t\t\t\tgenShape(res.parcel.footprint_poly_points, ht, 0, 0.75, false, type);\n\t\t\t\t}\n\t\t\t} catch (err) {}\n\t\t\tk++;\n\t\t});\n\t} catch (err) {\n\t\t//console.log('Error!!!');\n\t}\n\ttry {\n\t\tlet sitePoly = dataFromServerInp['site'];\n\t\tconsole.log(sitePoly);\n\t\tlet s = new THREE.Shape();\n\t\ts.moveTo(sitePoly[0].x, sitePoly[0].y);\n\t\tfor (let i = 1; i < sitePoly.length; i++) {\n\t\t\ts.lineTo(sitePoly[i].x, sitePoly[i].y);\n\t\t}\n\t\ts.autoClose = true;\n\t\tvar e = {\n\t\t\tsteps: 1,\n\t\t\tdepth: 12.5,\n\t\t\tbevelEnabled: false,\n\t\t};\n\t\tvar g = new THREE.ExtrudeGeometry(s, e);\n\t\tvar m = new THREE.MeshPhongMaterial({\n\t\t\tcolor: 0x777000,\n\t\t\topacity: 0.5,\n\t\t\ttransparent: true,\n\t\t\twireframe: false,\n\t\t});\n\t\tvar me = new THREE.Mesh(g, m);\n\t\tme.position.z = -12.5;\n\t\t// me.scale.set(2, 2, 2);\n\t\tmeshArr.push(me);\n\t} catch (err) {}\n\tmeshArr.forEach((me) => {\n\t\tscene3d.add(me);\n\t});\n\tlineArr.forEach((me) => {\n\t\tscene3d.add(me);\n\t});\n}\n\n//\n// \tMAIN component block\n//\nconst Viewer3d = ({ dataFromServerInp }) => {\n\tconst [dataFromServer, setDataFromServer] = useState(dataFromServerInp);\n\tuseEffect(() => {\n\t\tsetDataFromServer(dataFromServerInp);\n\t\tgenerate3dView();\n\t}, [dataFromServerInp]);\n\n\tconst generate3dView = () => {\n\t\t// console.log(dataFromServerInp);\n\t\tsetDataFromServer(dataFromServerInp);\n\t\tvar DIV = document.getElementById('viewerDiv3d');\n\t\twhile (DIV.children.length > 0) {\n\t\t\tDIV.removeChild(DIV.firstChild);\n\t\t}\n\t\t//\n\t\tscene3d = new THREE.Scene();\n\t\tscene3d.background = new THREE.Color('#ffffff');\n\t\tcamera3d = new THREE.PerspectiveCamera(45, width / height, 0.01, 100000);\n\t\tcamera3d.position.set(250, 250, 550);\n\t\tcamera3d.up = new THREE.Vector3(0, 0, 1);\n\t\trenderer3d = new THREE.WebGLRenderer();\n\t\trenderer3d.setSize(width, height);\n\t\tDIV.appendChild(renderer3d.domElement);\n\t\taddLight();\n\t\t//\n\t\tdraw3d(dataFromServerInp);\n\t\t//\n\t\tlet axes = new THREE.AxesHelper(150);\n\t\tscene3d.add(axes);\n\t\tvar updateWindow = () => {\n\t\t\tcamera3d.aspect = width / height;\n\t\t\tcamera3d.updateProjectionMatrix();\n\t\t\trenderer3d.setSize(width, height);\n\t\t};\n\t\tcontrols3d = new OrbitControls(camera3d, renderer3d.domElement);\n\t\tcontrols3d.addEventListener('onchange', updateWindow);\n\t\tanimate();\n\t};\n\n\t// call PY node to send data to db\n\tconst sendToDB = async () => {\n\t\tlet url = 'http://127.0.0.1:5000/api/post/output';\n\t\tconst res = await fetch(url, {\n\t\t\tmethod: 'post',\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tbody: JSON.stringify(dataFromServerInp),\n\t\t});\n\t\tconst data = await res.json();\n\t\tconsole.log(data);\n\t};\n\n\tvar animate = function () {\n\t\t// console.log(scene3d.children.length);\n\t\trequestAnimationFrame(animate);\n\t\trenderer3d.render(scene3d, camera3d);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<button className='btn btn-block' onClick={sendToDB}>\n\t\t\t\tSend to remote DB\n\t\t\t</button>\n\t\t</div>\n\t);\n};\nexport default Viewer3d;\n","import { useState, useEffect } from 'react';\n\nconst Constraints = ({ onGetConstraints }) => {\n\tconst [peripheral, setPeripheral] = useState(true);\n\tconst [subdivision, setSubdivision] = useState(true);\n\tconst [number, setNumParcels] = useState(5);\n\tconst [fsr, setFsr] = useState(1.25);\n\tconst [floorHeight, setFlrHt] = useState(3);\n\tconst [peripheralDepth, setPeripheralDepth] = useState(52);\n\tconst [setback, setSetback] = useState(7);\n\tconst [deviation, setDeviation] = useState(0.0);\n\tconst [courtyard_depth, setCourtyardDepth] = useState(35);\n\tconst [courtyard_number, setNumCourtyard] = useState(3);\n\n\tuseEffect(() => {}, [peripheral]);\n\tuseEffect(() => {}, [subdivision]);\n\tuseEffect(() => {}, [number]);\n\tuseEffect(() => {}, [fsr]);\n\tuseEffect(() => {}, [floorHeight]);\n\tuseEffect(() => {}, [peripheralDepth]);\n\tuseEffect(() => {}, [setback]);\n\tuseEffect(() => {}, [deviation]);\n\tuseEffect(() => {}, [courtyard_depth]);\n\tuseEffect(() => {}, [courtyard_number]);\n\n\tconst handleClick = () => {\n\t\tsetNumParcels(number);\n\t\tsetFsr(fsr);\n\t\tsetFlrHt(floorHeight);\n\t\tsetPeripheralDepth(peripheralDepth);\n\t\tsetSetback(setback);\n\t\tsetDeviation(deviation);\n\t\tsetCourtyardDepth(courtyard_depth);\n\t\tsetNumCourtyard(courtyard_number);\n\t};\n\n\tconst submitForm = (e) => {\n\t\te.preventDefault();\n\t\tonGetConstraints({\n\t\t\tperipheral,\n\t\t\tsubdivision,\n\t\t\tnumber: parseInt(number),\n\t\t\tfsr: parseFloat(fsr),\n\t\t\tfloorHeight: parseFloat(floorHeight),\n\t\t\tperipheralDepth: parseFloat(peripheralDepth),\n\t\t\tsetback: parseFloat(setback),\n\t\t\tdeviation: parseFloat(deviation),\n\t\t\tcourtyard_depth: parseFloat(courtyard_depth),\n\t\t\tcourtyard_number: parseFloat(courtyard_number),\n\t\t});\n\t\tsetPeripheral(true);\n\t\tsetSubdivision(true);\n\t\tsetNumParcels(parseInt(number));\n\t\tsetFsr(parseFloat(fsr));\n\t\tsetFlrHt(parseFloat(floorHeight));\n\t\tsetPeripheralDepth(parseFloat(peripheralDepth));\n\t\tsetSetback(parseFloat(setback));\n\t\tsetDeviation(deviation);\n\t\tsetCourtyardDepth(parseFloat(courtyard_depth));\n\t\tsetNumCourtyard(parseFloat(courtyard_number));\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<form className='add-form' onSubmit={submitForm}>\n\t\t\t\t<div className='form-control'>\n\t\t\t\t\t<table>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\tFloor Area Ratio (FAR) or Floor Space Ratio (FSR){' '}\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tplaceholder='3'\n\t\t\t\t\t\t\t\t\t\tvalue={fsr}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setFsr(e.target.value)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<label>Floor Height (partition)</label>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tplaceholder='3'\n\t\t\t\t\t\t\t\t\t\tvalue={floorHeight}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setFlrHt(e.target.value)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<label>Setback </label>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tplaceholder='1.0'\n\t\t\t\t\t\t\t\t\t\tvalue={setback}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setSetback(e.target.value)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<label>Number of internal subdivisions </label>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tplaceholder='5'\n\t\t\t\t\t\t\t\t\t\tvalue={number}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setNumParcels(e.target.value)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<label>Depth of Peripheral Arrangement </label>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tplaceholder='3'\n\t\t\t\t\t\t\t\t\t\tvalue={peripheralDepth}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setPeripheralDepth(e.target.value)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<label>Deviation in subdivision/partitions </label>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tplaceholder='3'\n\t\t\t\t\t\t\t\t\t\tvalue={deviation}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDeviation(e.target.value)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<label>Number of Courtyard-Type </label>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tplaceholder='3'\n\t\t\t\t\t\t\t\t\t\tvalue={courtyard_number}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setNumCourtyard(e.target.value)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<label>Depth of Bays in Courtyard-Type </label>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tplaceholder='3'\n\t\t\t\t\t\t\t\t\t\tvalue={courtyard_depth}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setCourtyardDepth(e.target.value)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\tvalue='submit'\n\t\t\t\t\t\t\tclassName='btn btn-block'\n\t\t\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nexport default Constraints;\n","import Button from './Button';\n\nconst HeaderExec = ({ title, onClickx, btnTitle }) => {\n\treturn (\n\t\t<div className='header'>\n\t\t\t<h2> {title} </h2>\n\t\t\t<Button onClickx={onClickx} text={btnTitle} color={'blue'} />\n\t\t</div>\n\t);\n};\n\nexport default HeaderExec;\n","import { useState, useEffect } from 'react';\nimport {\n\tMapContainer,\n\tTileLayer,\n\tFeatureGroup, // integrate draw\n} from 'react-leaflet';\nimport L from 'leaflet';\nimport { EditControl } from 'react-leaflet-draw'; //draw\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-draw/dist/leaflet.draw.css';\n\nfunction P(x, y) {\n\tthis.x = x;\n\tthis.y = y;\n}\n\nconst Map = ({ onGetMapPolyCoords }) => {\n\tconst [mapLayers, setMapLayers] = useState([]);\n\tconst [plotCoords, setPlotCoords] = useState([\n\t\t{ x: -200, y: -200 },\n\t\t{ x: 200, y: -200 },\n\t\t{ x: 200, y: 200 },\n\t\t{ x: -200, y: 200 },\n\t]);\n\tconst [center, setCenter] = useState({ lat: 48.864716, lng: 2.349 }); // Paris\n\t// const [center, setCenter] = useState({ lat: 37.773972, lng: -122.431297 }); // Sanfrancisco\n\tconst ZOOM_LVL = 13;\n\t//\n\tuseEffect(() => {\n\t\tconsole.log(plotCoords);\n\t}, [plotCoords]);\n\t//\n\tconst handleClick = (e) => {\n\t\tsetPlotCoords(plotCoords);\n\t};\n\t//\n\tconst processCoords = (ptCoords) => {\n\t\tvar plotPtCoords = [];\n\t\tconst p0 = ptCoords[0];\n\t\tlet sumX = 0,\n\t\t\tsumY = 0;\n\t\tptCoords.forEach((p) => {\n\t\t\tlet p1 = [\n\t\t\t\tparseFloat(p[0]) - parseFloat(p0[0]),\n\t\t\t\tparseFloat(p[1]) - parseFloat(p0[1]),\n\t\t\t];\n\t\t\tplotPtCoords.push({ x: p1[0].toFixed(4), y: p1[1].toFixed(4) });\n\t\t\tsumX += p1[0];\n\t\t\tsumY += p1[1];\n\t\t});\n\t\tconsole.log('created map', ptCoords);\n\t\t//\n\t\tlet cenX = sumX / ptCoords.length;\n\t\tlet cenY = sumY / ptCoords.length;\n\t\t//\n\t\tlet transformPlotPtCoords = [];\n\t\tplotPtCoords.forEach((p) => {\n\t\t\tlet p2 = [parseFloat(p.x) - cenX, parseFloat(p.y) - cenY];\n\t\t\ttransformPlotPtCoords.push({ x: p2[0], y: p2[1] });\n\t\t});\n\t\t//\n\t\t// mirror along x-axis\n\t\tlet mirrorXPts = [];\n\t\tlet u = { x: 100, y: 0 };\n\t\tlet norm = u.x * u.x + u.y * u.y;\n\t\ttransformPlotPtCoords.forEach((p) => {\n\t\t\tlet v = { x: p.x - u.x, y: p.y - u.y };\n\t\t\tlet dp = (u.x * v.x + u.y * v.y) / norm;\n\t\t\tlet P = { x: 2 * u.x * dp - p.x, y: 2 * u.y * dp - p.y };\n\t\t\tmirrorXPts.push(P);\n\t\t});\n\t\tsetPlotCoords(mirrorXPts);\n\t};\n\t//\n\tconst _onCreated = (e) => {\n\t\tlet ptCoords = [];\n\t\tconst { layerType, layer } = e;\n\t\tif (layerType === 'polygon') {\n\t\t\tconst { _leaflet_id } = layer;\n\t\t\tsetMapLayers((layers) => [\n\t\t\t\t...layers,\n\t\t\t\t{ id: _leaflet_id, latlngs: layer.getLatLngs()[0] },\n\t\t\t]);\n\n\t\t\tconsole.log(layer.getLatLngs()[0]);\n\t\t\tlayer.getLatLngs()[0].forEach((T) => {\n\t\t\t\tlet point = L.CRS.EPSG3857.project(L.latLng(T));\n\t\t\t\tptCoords.push([point.y, point.x]);\n\t\t\t});\n\t\t\tptCoords.push(ptCoords[0]);\n\t\t}\n\t\tprocessCoords(ptCoords);\n\t};\n\t//\n\tconst _onEdited = (e) => {\n\t\t/* console.log(e); */\n\t\tconst {\n\t\t\tlayers: { _layers },\n\t\t} = e;\n\t\tlet lArr = Object.values(_layers)[0].editing.latlngs[0][0];\n\t\tlet ptCoords = [];\n\t\tlArr.forEach((T) => {\n\t\t\tlet point = L.CRS.EPSG3857.project(L.latLng(T));\n\t\t\tptCoords.push([point.y, point.x]);\n\t\t});\n\t\tprocessCoords(ptCoords);\n\t};\n\t//\n\tconst _onDeleted = (e) => {\n\t\t/* console.log(e); */\n\t\tconst {\n\t\t\tlayers: { _layers },\n\t\t} = e;\n\t\tObject.values(_layers).map(({ _leaflet_id }) => {\n\t\t\tsetMapLayers((layers) => layers.filter((l) => l.id !== _leaflet_id));\n\t\t});\n\t\tsetPlotCoords([\n\t\t\t{ x: -200, y: -200 },\n\t\t\t{ x: 200, y: -200 },\n\t\t\t{ x: 200, y: 200 },\n\t\t\t{ x: -200, y: 200 },\n\t\t]);\n\t};\n\t//\n\tconst submitMap = (e) => {\n\t\te.preventDefault();\n\t\tonGetMapPolyCoords(plotCoords);\n\t};\n\t//\n\treturn (\n\t\t<div>\n\t\t\t<div className='map_container'>\n\t\t\t\t<form onSubmit={submitMap}>\n\t\t\t\t\t<MapContainer center={center} zoom={ZOOM_LVL}>\n\t\t\t\t\t\t<FeatureGroup>\n\t\t\t\t\t\t\t<EditControl\n\t\t\t\t\t\t\t\tposition='topright'\n\t\t\t\t\t\t\t\tonCreated={_onCreated}\n\t\t\t\t\t\t\t\tonEdited={_onEdited}\n\t\t\t\t\t\t\t\tonDeleted={_onDeleted}\n\t\t\t\t\t\t\t\tdraw={{\n\t\t\t\t\t\t\t\t\trectangle: false,\n\t\t\t\t\t\t\t\t\tpolyline: false,\n\t\t\t\t\t\t\t\t\tcircle: false,\n\t\t\t\t\t\t\t\t\tmarker: false,\n\t\t\t\t\t\t\t\t\tcirclemarker: false,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FeatureGroup>\n\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\tattribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n\t\t\t\t\t\t\turl='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</MapContainer>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\tvalue='submit'\n\t\t\t\t\t\t\tclassName='btn btn-block'\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\thandleClick();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Map;\n","import { useState, useEffect } from 'react';\nimport Header from './components/Header';\n\nimport ReviewDB from './components/ReviewDB';\nimport Viewer3d from './components/Viewer3d';\nimport Constraints from './components/Constraints';\nimport HeaderExec from './components/HeaderExec';\nimport Map from './components/Map';\n\nfunction App() {\n\tconst [solverData, setSolverData] = useState(); // from server --> viewer 3D\n\tconst [dbData, setDbData] = useState(false); // from mongoDB\n\n\tconst [showConstraints, setShowConstraints] = useState(false);\n\tconst [showMap, setShowMap] = useState(false);\n\tconst [showViewer, setShowViewer] = useState(false);\n\tconst [showDbReview, setShowDbReview] = useState(false);\n\n\tconst [constraints, setConstraints] = useState({\n\t\tperipheral: true,\n\t\tsubdivision: true,\n\t\tnumber: 5,\n\t\tfsr: 1.25,\n\t\tfloorHeight: 3,\n\t\tperipheralDepth: 52,\n\t\tsetback: 7,\n\t\tdeviation: 0.5,\n\t\tcourtyard_depth: 35,\n\t\tcourtyard_number: 3,\n\t});\n\tconst [polygon, setPolygon] = useState([\n\t\t{ x: -200, y: -200 },\n\t\t{ x: 200, y: -200 },\n\t\t{ x: 200, y: 200 },\n\t\t{ x: -200, y: 200 },\n\t]);\n\tconst [combinedConstraints, setCombinedConstraints] = useState({\n\t\t...constraints,\n\t\tpolygon,\n\t});\n\n\tuseEffect(() => {\n\t\tGetDataFromDBFunc();\n\t}, []);\n\n\tuseEffect(() => {\n\t\tGenerateSolution();\n\t\tsetShowViewer(showViewer);\n\t}, [combinedConstraints]);\n\n\tconst SetConstraintsFunc = (inpConstraint) => {\n\t\tsetConstraints(inpConstraint);\n\t};\n\tconst SetMapCoordFunc = (inpCoords) => {\n\t\tsetPolygon(inpCoords);\n\t};\n\tconst SetCombineConstraintsFunc = () => {\n\t\tsetCombinedConstraints({ ...constraints, polygon });\n\t\tGenerateSolution();\n\t};\n\n\tconst GetDataFromDBFunc = () => {\n\t\tGetOutputFromDB();\n\t};\n\n\t// POST send constraints to PY server\n\tconst GenerateSolution = async () => {\n\t\tlet url = 'http://localhost:5000/api/get/partitions';\n\t\t// let url = 'https://apipw2.azurewebsites.net/api/post/composed_solution';\n\t\tconst res = await fetch(url, {\n\t\t\tmethod: 'post',\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tbody: JSON.stringify(combinedConstraints),\n\t\t});\n\t\tconst data = await res.json();\n\t\tsetSolverData(data);\n\t};\n\n\t// GET output-data from DB\n\tconst GetOutputFromDB = async () => {\n\t\tlet url = 'http://127.0.0.1:5000/api/get/output';\n\t\tconst res = await fetch(url, {\n\t\t\tmethod: 'get',\n\t\t});\n\t\tconst data = await res.json();\n\t\tsetDbData(data);\n\t\tconsole.log(dbData);\n\t};\n\n\treturn (\n\t\t<div className='container'>\n\t\t\t<h1>\n\t\t\t\t<b>Architecture & Urban Design Client</b>\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t</h1>\n\t\t\t<br />\n\n\t\t\t<Header\n\t\t\t\ttitle='Input constraints'\n\t\t\t\tshow={showConstraints}\n\t\t\t\tonClickx={() => {\n\t\t\t\t\tsetShowConstraints(!showConstraints);\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t{showConstraints && <Constraints onGetConstraints={SetConstraintsFunc} />}\n\n\t\t\t<Header\n\t\t\t\ttitle='Draw the site on a map'\n\t\t\t\tshow={showMap}\n\t\t\t\tonClickx={() => {\n\t\t\t\t\tsetShowMap(!showMap);\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t{showMap && <Map onGetMapPolyCoords={SetMapCoordFunc} />}\n\n\t\t\t<HeaderExec\n\t\t\t\ttitle='Generate a solution'\n\t\t\t\tbtnTitle='Process'\n\t\t\t\tonClickx={() => {\n\t\t\t\t\tSetCombineConstraintsFunc();\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<Header\n\t\t\t\ttitle='View results'\n\t\t\t\tshow={showViewer}\n\t\t\t\tonClickx={() => {\n\t\t\t\t\tsetShowViewer(!showViewer);\n\t\t\t\t\tlet div = document.getElementById('viewerDiv3d');\n\t\t\t\t\twhile (div.children.length > 0) {\n\t\t\t\t\t\tdiv.removeChild(div.firstChild);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t{showViewer && <Viewer3d dataFromServerInp={solverData} />}\n\t\t\t<div id='viewerDiv3d'></div>\n\n\t\t\t<Header\n\t\t\t\ttitle='Review DB'\n\t\t\t\tshow={showDbReview}\n\t\t\t\tonClickx={() => {\n\t\t\t\t\tsetShowDbReview(!showDbReview);\n\t\t\t\t\tlet div = document.getElementById('viewerDBDiv3d');\n\t\t\t\t\twhile (div.children.length > 0) {\n\t\t\t\t\t\tdiv.removeChild(div.firstChild);\n\t\t\t\t\t}\n\t\t\t\t\tGetDataFromDBFunc();\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t{showDbReview && <ReviewDB getDbData={dbData} />}\n\t\t\t<div id='viewerDBDiv3d'></div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}