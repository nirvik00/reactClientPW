{"version":3,"sources":["components/Button.js","components/Viewer3d.js","components/Header.js","components/Constraints.js","components/HeaderExec.js","components/Map.js","App.js","index.js"],"names":["Button","text","onClickx","color","className","style","backgroundColor","onClick","defaultProps","scene3d","camera3d","renderer3d","Header","title","show","lineArr","meshArr","width","height","getColor","t","addFloors","poly","ht_inp","push","i","length","pts","THREE","x","y","z","g","setFromPoints","m","me","j","me2","clone","position","genShape","op","type","colr_","s","moveTo","lineTo","autoClose","e","steps","depth","bevelEnabled","opacity","transparent","wireframe","Viewer3d","dataFromServerInp","useState","setDataFromServer","useEffect","generate3dView","console","log","DIV","document","getElementById","children","removeChild","firstChild","background","set","up","setSize","appendChild","domElement","light1","add","addLight","forEach","geometry","dispose","material","remove","k","resPartitions","sumAR","sumHT","num","res","parcel","area","building_height","maxHT","minAR","ar","ht","footprint_poly_points","err","sitePoly","draw3d","axes","OrbitControls","addEventListener","aspect","updateProjectionMatrix","animate","requestAnimationFrame","render","Constraints","onGetConstraints","peripheral","setPeripheral","subdivision","setSubdivision","number","setNumParcels","fsr","setFsr","floorHeight","setFlrHt","peripheralDepth","setPeripheralDepth","setback","setSetback","deviation","setDeviation","courtyard_depth","setCourtyardDepth","courtyard_number","setNumCourtyard","onSubmit","preventDefault","parseInt","parseFloat","placeholder","value","onChange","target","HeaderExec","btnTitle","Map","onGetMapPolyCoords","setMapLayers","plotCoords","setPlotCoords","lat","lng","center","processCoords","ptCoords","plotPtCoords","p0","sumX","sumY","p","p1","toFixed","cenX","cenY","transformPlotPtCoords","p2","mirrorXPts","u","norm","v","dp","P","MapContainer","zoom","FeatureGroup","onCreated","layerType","layer","_leaflet_id","layers","id","latlngs","getLatLngs","T","point","L","CRS","EPSG3857","project","latLng","onEdited","_layers","lArr","Object","values","editing","onDeleted","map","filter","l","draw","rectangle","polyline","circle","marker","circlemarker","TileLayer","attribution","url","App","solverData","setSolverData","showConstraints","setShowConstraints","showMap","setShowMap","showViewer","setShowViewer","constraints","setConstraints","polygon","setPolygon","combinedConstraints","setCombinedConstraints","GenerateSolution","a","fetch","method","headers","body","JSON","stringify","json","data","inpConstraint","inpCoords","div","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.e5d20692.chunk.js","sourcesContent":["import React from 'react';\n\nconst Button = ({ text, onClickx, color }) => {\n\treturn (\n\t\t<div>\n\t\t\t<button\n\t\t\t\tclassName='btn'\n\t\t\t\tstyle={{ backgroundColor: color }}\n\t\t\t\tonClick={onClickx}>\n\t\t\t\t{text}\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nButton.defaultProps = {\n\tcolor: 'steelblue',\n\ttext: 'Button',\n};\nexport default Button;\n","import { useState, useEffect } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\n\nvar lineArr = [];\nvar meshArr = [];\nvar scene3d, camera3d, renderer3d, controls3d;\nconst width = 400,\n\theight = 400;\n\nfunction addLight() {\n\tlet light1 = new THREE.AmbientLight(0xffffff);\n\tscene3d.add(light1);\n}\nfunction getColor(t = 0) {\n\tif (t === 0) return 0xff5e10;\n\telse if (t === 1) return 0xff7ea0;\n\telse if (t === 2) return 0xdd7e00;\n\telse return 0xffffff;\n}\nfunction genCentroid(p) {\n\tlet g = new THREE.SphereGeometry(2.5, 30, 30);\n\tlet m = new THREE.MeshPhongMaterial({ color: 0xff0dee });\n\tlet me = new THREE.Mesh(g, m);\n\tme.position.set(p.x, p.y, 0);\n\tmeshArr.push(me);\n}\nfunction addFloors(poly, ht_inp) {\n\tpoly.push(poly[0]);\n\tfor (let i = 0; i < poly.length - 1; i++) {\n\t\tlet a = new THREE.Vector3(poly[i].x, poly[i].y, poly[i].z);\n\t\tlet b = new THREE.Vector3(poly[i + 1].x, poly[i + 1].y, poly[i + 1].z);\n\t\tlet pts = [a, b];\n\t\tlet g = new THREE.BufferGeometry().setFromPoints(pts);\n\t\tlet m = new THREE.LineBasicMaterial({ color: 0x000000 });\n\t\tlet me = new THREE.Line(g, m);\n\t\tfor (let j = 0; j < ht_inp; j += 3) {\n\t\t\tlet me2 = me.clone();\n\t\t\tme2.position.z = j;\n\t\t\tlineArr.push(me2);\n\t\t}\n\t}\n}\nfunction genShape(poly, ht_inp, colr = 0, op = 0.75, t, type) {\n\tif (type !== 'site') {\n\t\taddFloors(poly, ht_inp);\n\t}\n\tlet colr_ = 0x000000;\n\tif (type === 'peripheral') {\n\t\tcolr_ = getColor(0);\n\t} else if (type === 'partition') {\n\t\tcolr_ = getColor(1);\n\t} else if (type === 'courtyard') {\n\t\tcolr_ = getColor(2);\n\t} else if (type === 'site') {\n\t\tcolr_ = getColor(3);\n\t}\n\tlet s = new THREE.Shape();\n\ts.moveTo(poly[0].x, poly[0].y);\n\tfor (let i = 1; i < poly.length; i++) {\n\t\ts.lineTo(poly[i].x, poly[i].y);\n\t}\n\ts.autoClose = true;\n\tvar e = {\n\t\tsteps: 1,\n\t\tdepth: ht_inp,\n\t\tbevelEnabled: false,\n\t};\n\tvar g = new THREE.ExtrudeGeometry(s, e);\n\tvar m = new THREE.MeshPhongMaterial({\n\t\tcolor: colr_,\n\t\topacity: op,\n\t\ttransparent: true,\n\t\twireframe: t,\n\t});\n\tvar me = new THREE.Mesh(g, m);\n\tmeshArr.push(me);\n}\nfunction draw3d(dataFromServerInp) {\n\tmeshArr.forEach((me) => {\n\t\tme.geometry.dispose();\n\t\tme.material.dispose();\n\t\tscene3d.remove(me);\n\t});\n\tlineArr.forEach((me) => {\n\t\tme.geometry.dispose();\n\t\tme.material.dispose();\n\t\tscene3d.remove(me);\n\t});\n\tlineArr = [];\n\tmeshArr = [];\n\t/* let data = dataFromServerInp; */\n\tlet k = 0;\n\ttry {\n\t\tlet resPartitions = dataFromServerInp['partitions'];\n\t\tlet sumAR = 0;\n\t\tlet sumHT = 0;\n\t\tlet num = 0;\n\t\tresPartitions.forEach((res) => {\n\t\t\tsumAR += res.parcel.area;\n\t\t\tsumHT += res.parcel.building_height;\n\t\t\tnum++;\n\t\t});\n\t\tlet maxHT = (sumHT * 10.0) / num;\n\t\tlet minAR = (sumAR * 0.1) / num;\n\n\t\tresPartitions.forEach((res) => {\n\t\t\tlet obj = resPartitions[k];\n\t\t\tlet ar = res.parcel.area;\n\t\t\tlet ht = res.parcel.building_height;\n\t\t\tlet type = res.parcel.type;\n\t\t\t// genShape(res.parcel.parcel_poly_points, 0.25, 1, 0.75, false, type);\n\t\t\t// genCentroid(res.parcel.centroid);\n\t\t\ttry {\n\t\t\t\tif (type === 'peripheral' || type === 'courtyard') {\n\t\t\t\t\tgenShape(res.parcel.footprint_poly_points, ht, 0, 0.75, false, type);\n\t\t\t\t} else if (type === 'partition' && ht < maxHT && ar > minAR) {\n\t\t\t\t\tgenShape(res.parcel.footprint_poly_points, ht, 0, 0.75, false, type);\n\t\t\t\t}\n\t\t\t} catch (err) {}\n\t\t\tk++;\n\t\t});\n\t} catch (err) {\n\t\t//console.log('Error!!!');\n\t}\n\ttry {\n\t\tlet sitePoly = dataFromServerInp['site'];\n\t\tconsole.log(sitePoly);\n\t\tlet s = new THREE.Shape();\n\t\ts.moveTo(sitePoly[0].x, sitePoly[0].y);\n\t\tfor (let i = 1; i < sitePoly.length; i++) {\n\t\t\ts.lineTo(sitePoly[i].x, sitePoly[i].y);\n\t\t}\n\t\ts.autoClose = true;\n\t\tvar e = {\n\t\t\tsteps: 1,\n\t\t\tdepth: 12.5,\n\t\t\tbevelEnabled: false,\n\t\t};\n\t\tvar g = new THREE.ExtrudeGeometry(s, e);\n\t\tvar m = new THREE.MeshPhongMaterial({\n\t\t\tcolor: 0x777000,\n\t\t\topacity: 0.5,\n\t\t\ttransparent: true,\n\t\t\twireframe: false,\n\t\t});\n\t\tvar me = new THREE.Mesh(g, m);\n\t\tme.position.z = -12.5;\n\t\t// me.scale.set(2, 2, 2);\n\t\tmeshArr.push(me);\n\t} catch (err) {}\n\tmeshArr.forEach((me) => {\n\t\tscene3d.add(me);\n\t});\n\tlineArr.forEach((me) => {\n\t\tscene3d.add(me);\n\t});\n}\nconst Viewer3d = ({ dataFromServerInp }) => {\n\tconst [dataFromServer, setDataFromServer] = useState(dataFromServerInp);\n\tuseEffect(() => {\n\t\tsetDataFromServer(dataFromServerInp);\n\t\tgenerate3dView();\n\t}, [dataFromServerInp]);\n\tconst generate3dView = () => {\n\t\tconsole.log(dataFromServerInp);\n\t\tsetDataFromServer(dataFromServerInp);\n\t\tvar DIV = document.getElementById('viewerDiv3d');\n\t\twhile (DIV.children.length > 0) {\n\t\t\tDIV.removeChild(DIV.firstChild);\n\t\t}\n\t\t//\n\t\tscene3d = new THREE.Scene();\n\t\tscene3d.background = new THREE.Color('#ffffff');\n\t\tcamera3d = new THREE.PerspectiveCamera(45, width / height, 0.01, 100000);\n\t\tcamera3d.position.set(250, 250, 550);\n\t\tcamera3d.up = new THREE.Vector3(0, 0, 1);\n\t\trenderer3d = new THREE.WebGLRenderer();\n\t\trenderer3d.setSize(width, height);\n\t\tDIV.appendChild(renderer3d.domElement);\n\t\taddLight();\n\t\t//\n\t\tdraw3d(dataFromServerInp);\n\t\t//\n\t\tlet axes = new THREE.AxesHelper(150);\n\t\tscene3d.add(axes);\n\t\tvar updateWindow = () => {\n\t\t\tcamera3d.aspect = width / height;\n\t\t\tcamera3d.updateProjectionMatrix();\n\t\t\trenderer3d.setSize(width, height);\n\t\t};\n\t\tcontrols3d = new OrbitControls(camera3d, renderer3d.domElement);\n\t\tcontrols3d.addEventListener('onchange', updateWindow);\n\t\tanimate();\n\t};\n\tvar animate = function () {\n\t\t// console.log(scene3d.children.length);\n\t\trequestAnimationFrame(animate);\n\t\trenderer3d.render(scene3d, camera3d);\n\t};\n\treturn <div />;\n};\nexport default Viewer3d;\n","import Button from './Button';\n\nconst Header = ({ title, onClickx, show }) => {\n\treturn (\n\t\t<div className='header'>\n\t\t\t<h2> {title} </h2>\n\t\t\t<Button\n\t\t\t\tonClickx={onClickx}\n\t\t\t\ttext={show ? 'Hide' : 'Show'}\n\t\t\t\tcolor={show ? 'blue' : 'green'}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default Header;\n","import { useState, useEffect } from 'react';\n\nconst Constraints = ({ onGetConstraints }) => {\n\tconst [peripheral, setPeripheral] = useState(true);\n\tconst [subdivision, setSubdivision] = useState(true);\n\tconst [number, setNumParcels] = useState(5);\n\tconst [fsr, setFsr] = useState(1.25);\n\tconst [floorHeight, setFlrHt] = useState(3);\n\tconst [peripheralDepth, setPeripheralDepth] = useState(52);\n\tconst [setback, setSetback] = useState(7);\n\tconst [deviation, setDeviation] = useState(0.0);\n\tconst [courtyard_depth, setCourtyardDepth] = useState(35);\n\tconst [courtyard_number, setNumCourtyard] = useState(3);\n\n\tuseEffect(() => {}, [peripheral]);\n\tuseEffect(() => {}, [subdivision]);\n\tuseEffect(() => {}, [number]);\n\tuseEffect(() => {}, [fsr]);\n\tuseEffect(() => {}, [floorHeight]);\n\tuseEffect(() => {}, [peripheralDepth]);\n\tuseEffect(() => {}, [setback]);\n\tuseEffect(() => {}, [deviation]);\n\tuseEffect(() => {}, [courtyard_depth]);\n\tuseEffect(() => {}, [courtyard_number]);\n\n\tconst handleClick = () => {\n\t\tsetNumParcels(number);\n\t\tsetFsr(fsr);\n\t\tsetFlrHt(floorHeight);\n\t\tsetPeripheralDepth(peripheralDepth);\n\t\tsetSetback(setback);\n\t\tsetDeviation(deviation);\n\t\tsetCourtyardDepth(courtyard_depth);\n\t\tsetNumCourtyard(courtyard_number);\n\t};\n\n\tconst submitForm = (e) => {\n\t\te.preventDefault();\n\t\tonGetConstraints({\n\t\t\tperipheral,\n\t\t\tsubdivision,\n\t\t\tnumber: parseInt(number),\n\t\t\tfsr: parseFloat(fsr),\n\t\t\tfloorHeight: parseFloat(floorHeight),\n\t\t\tperipheralDepth: parseFloat(peripheralDepth),\n\t\t\tsetback: parseFloat(setback),\n\t\t\tdeviation: parseFloat(deviation),\n\t\t\tcourtyard_depth: parseFloat(courtyard_depth),\n\t\t\tcourtyard_number: parseFloat(courtyard_number),\n\t\t});\n\t\tsetPeripheral(true);\n\t\tsetSubdivision(true);\n\t\tsetNumParcels(parseInt(number));\n\t\tsetFsr(parseFloat(fsr));\n\t\tsetFlrHt(parseFloat(floorHeight));\n\t\tsetPeripheralDepth(parseFloat(peripheralDepth));\n\t\tsetSetback(parseFloat(setback));\n\t\tsetDeviation(deviation);\n\t\tsetCourtyardDepth(parseFloat(courtyard_depth));\n\t\tsetNumCourtyard(parseFloat(courtyard_number));\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<form className='add-form' onSubmit={submitForm}>\n\t\t\t\t<div className='form-control'>\n\t\t\t\t\t<table>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\tFloor Area Ratio (FAR) or Floor Space Ratio (FSR){' '}\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tplaceholder='3'\n\t\t\t\t\t\t\t\t\t\tvalue={fsr}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setFsr(e.target.value)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<label>Floor Height (partition)</label>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tplaceholder='3'\n\t\t\t\t\t\t\t\t\t\tvalue={floorHeight}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setFlrHt(e.target.value)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<label>Setback </label>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tplaceholder='1.0'\n\t\t\t\t\t\t\t\t\t\tvalue={setback}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setSetback(e.target.value)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<label>Number of internal subdivisions </label>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tplaceholder='5'\n\t\t\t\t\t\t\t\t\t\tvalue={number}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setNumParcels(e.target.value)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<label>Depth of Peripheral Arrangement </label>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tplaceholder='3'\n\t\t\t\t\t\t\t\t\t\tvalue={peripheralDepth}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setPeripheralDepth(e.target.value)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<label>Deviation in subdivision/partitions </label>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tplaceholder='3'\n\t\t\t\t\t\t\t\t\t\tvalue={deviation}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDeviation(e.target.value)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<label>Number of Courtyard-Type </label>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tplaceholder='3'\n\t\t\t\t\t\t\t\t\t\tvalue={courtyard_number}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setNumCourtyard(e.target.value)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<label>Depth of Bays in Courtyard-Type </label>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tplaceholder='3'\n\t\t\t\t\t\t\t\t\t\tvalue={courtyard_depth}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setCourtyardDepth(e.target.value)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\tvalue='submit'\n\t\t\t\t\t\t\tclassName='btn btn-block'\n\t\t\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nexport default Constraints;\n","import Button from './Button';\n\nconst HeaderExec = ({ title, onClickx, btnTitle }) => {\n\treturn (\n\t\t<div className='header'>\n\t\t\t<h2> {title} </h2>\n\t\t\t<Button onClickx={onClickx} text={btnTitle} color={'blue'} />\n\t\t</div>\n\t);\n};\n\nexport default HeaderExec;\n","import { useState, useEffect } from 'react';\nimport {\n\tMapContainer,\n\tTileLayer,\n\tFeatureGroup, // integrate draw\n} from 'react-leaflet';\nimport L from 'leaflet';\nimport { EditControl } from 'react-leaflet-draw'; //draw\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-draw/dist/leaflet.draw.css';\n\nfunction P(x, y) {\n\tthis.x = x;\n\tthis.y = y;\n}\n\nconst Map = ({ onGetMapPolyCoords }) => {\n\tconst [mapLayers, setMapLayers] = useState([]);\n\tconst [plotCoords, setPlotCoords] = useState([\n\t\t{ x: -200, y: -200 },\n\t\t{ x: 200, y: -200 },\n\t\t{ x: 200, y: 200 },\n\t\t{ x: -200, y: 200 },\n\t]);\n\tconst [center, setCenter] = useState({ lat: 48.864716, lng: 2.349 }); // Paris\n\t// const [center, setCenter] = useState({ lat: 37.773972, lng: -122.431297 }); // Sanfrancisco\n\tconst ZOOM_LVL = 13;\n\t//\n\tuseEffect(() => {\n\t\tconsole.log(plotCoords);\n\t}, [plotCoords]);\n\t//\n\tconst handleClick = (e) => {\n\t\tsetPlotCoords(plotCoords);\n\t};\n\t//\n\tconst processCoords = (ptCoords) => {\n\t\tvar plotPtCoords = [];\n\t\tconst p0 = ptCoords[0];\n\t\tlet sumX = 0,\n\t\t\tsumY = 0;\n\t\tptCoords.forEach((p) => {\n\t\t\tlet p1 = [\n\t\t\t\tparseFloat(p[0]) - parseFloat(p0[0]),\n\t\t\t\tparseFloat(p[1]) - parseFloat(p0[1]),\n\t\t\t];\n\t\t\tplotPtCoords.push({ x: p1[0].toFixed(4), y: p1[1].toFixed(4) });\n\t\t\tsumX += p1[0];\n\t\t\tsumY += p1[1];\n\t\t});\n\t\tconsole.log('created map', ptCoords);\n\t\t//\n\t\tlet cenX = sumX / ptCoords.length;\n\t\tlet cenY = sumY / ptCoords.length;\n\t\t//\n\t\tlet transformPlotPtCoords = [];\n\t\tplotPtCoords.forEach((p) => {\n\t\t\tlet p2 = [parseFloat(p.x) - cenX, parseFloat(p.y) - cenY];\n\t\t\ttransformPlotPtCoords.push({ x: p2[0], y: p2[1] });\n\t\t});\n\t\t//\n\t\t// mirror along x-axis\n\t\tlet mirrorXPts = [];\n\t\tlet u = { x: 100, y: 0 };\n\t\tlet norm = u.x * u.x + u.y * u.y;\n\t\ttransformPlotPtCoords.forEach((p) => {\n\t\t\tlet v = { x: p.x - u.x, y: p.y - u.y };\n\t\t\tlet dp = (u.x * v.x + u.y * v.y) / norm;\n\t\t\tlet P = { x: 2 * u.x * dp - p.x, y: 2 * u.y * dp - p.y };\n\t\t\tmirrorXPts.push(P);\n\t\t});\n\t\tsetPlotCoords(mirrorXPts);\n\t};\n\t//\n\tconst _onCreated = (e) => {\n\t\tlet ptCoords = [];\n\t\tconst { layerType, layer } = e;\n\t\tif (layerType === 'polygon') {\n\t\t\tconst { _leaflet_id } = layer;\n\t\t\tsetMapLayers((layers) => [\n\t\t\t\t...layers,\n\t\t\t\t{ id: _leaflet_id, latlngs: layer.getLatLngs()[0] },\n\t\t\t]);\n\n\t\t\tconsole.log(layer.getLatLngs()[0]);\n\t\t\tlayer.getLatLngs()[0].forEach((T) => {\n\t\t\t\tlet point = L.CRS.EPSG3857.project(L.latLng(T));\n\t\t\t\tptCoords.push([point.y, point.x]);\n\t\t\t});\n\t\t\tptCoords.push(ptCoords[0]);\n\t\t}\n\t\tprocessCoords(ptCoords);\n\t};\n\t//\n\tconst _onEdited = (e) => {\n\t\t/* console.log(e); */\n\t\tconst {\n\t\t\tlayers: { _layers },\n\t\t} = e;\n\t\tlet lArr = Object.values(_layers)[0].editing.latlngs[0][0];\n\t\tlet ptCoords = [];\n\t\tlArr.forEach((T) => {\n\t\t\tlet point = L.CRS.EPSG3857.project(L.latLng(T));\n\t\t\tptCoords.push([point.y, point.x]);\n\t\t});\n\t\tprocessCoords(ptCoords);\n\t};\n\t//\n\tconst _onDeleted = (e) => {\n\t\t/* console.log(e); */\n\t\tconst {\n\t\t\tlayers: { _layers },\n\t\t} = e;\n\t\tObject.values(_layers).map(({ _leaflet_id }) => {\n\t\t\tsetMapLayers((layers) => layers.filter((l) => l.id !== _leaflet_id));\n\t\t});\n\t\tsetPlotCoords([\n\t\t\t{ x: -200, y: -200 },\n\t\t\t{ x: 200, y: -200 },\n\t\t\t{ x: 200, y: 200 },\n\t\t\t{ x: -200, y: 200 },\n\t\t]);\n\t};\n\t//\n\tconst submitMap = (e) => {\n\t\te.preventDefault();\n\t\tonGetMapPolyCoords(plotCoords);\n\t};\n\t//\n\treturn (\n\t\t<div>\n\t\t\t<div className='map_container'>\n\t\t\t\t<form onSubmit={submitMap}>\n\t\t\t\t\t<MapContainer center={center} zoom={ZOOM_LVL}>\n\t\t\t\t\t\t<FeatureGroup>\n\t\t\t\t\t\t\t<EditControl\n\t\t\t\t\t\t\t\tposition='topright'\n\t\t\t\t\t\t\t\tonCreated={_onCreated}\n\t\t\t\t\t\t\t\tonEdited={_onEdited}\n\t\t\t\t\t\t\t\tonDeleted={_onDeleted}\n\t\t\t\t\t\t\t\tdraw={{\n\t\t\t\t\t\t\t\t\trectangle: false,\n\t\t\t\t\t\t\t\t\tpolyline: false,\n\t\t\t\t\t\t\t\t\tcircle: false,\n\t\t\t\t\t\t\t\t\tmarker: false,\n\t\t\t\t\t\t\t\t\tcirclemarker: false,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FeatureGroup>\n\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\tattribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n\t\t\t\t\t\t\turl='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</MapContainer>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\tvalue='submit'\n\t\t\t\t\t\t\tclassName='btn btn-block'\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\thandleClick();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Map;\n","import { useState, useEffect } from 'react';\nimport Header from './components/Header';\n\nimport Viewer3d from './components/Viewer3d';\nimport Constraints from './components/Constraints';\nimport HeaderExec from './components/HeaderExec';\nimport Map from './components/Map';\n\nfunction App() {\n\tconst [solverData, setSolverData] = useState(); // from server --> viewer 3D\n\tconst [showConstraints, setShowConstraints] = useState(false);\n\tconst [showMap, setShowMap] = useState(false);\n\tconst [showViewer, setShowViewer] = useState(false);\n\tconst [constraints, setConstraints] = useState({\n\t\tperipheral: true,\n\t\tsubdivision: true,\n\t\tnumber: 5,\n\t\tfsr: 1.25,\n\t\tfloorHeight: 3,\n\t\tperipheralDepth: 52,\n\t\tsetback: 7,\n\t\tdeviation: 0.5,\n\t\tcourtyard_depth: 35,\n\t\tcourtyard_number: 3,\n\t});\n\tconst [polygon, setPolygon] = useState([\n\t\t{ x: -200, y: -200 },\n\t\t{ x: 200, y: -200 },\n\t\t{ x: 200, y: 200 },\n\t\t{ x: -200, y: 200 },\n\t]);\n\tconst [combinedConstraints, setCombinedConstraints] = useState({\n\t\t...constraints,\n\t\tpolygon,\n\t});\n\n\tuseEffect(() => {\n\t\tGenerateSolution();\n\t\tsetShowViewer(showViewer);\n\t}, [combinedConstraints]);\n\n\tconst SetConstraintsFunc = (inpConstraint) => {\n\t\tsetConstraints(inpConstraint);\n\t};\n\tconst SetMapCoordFunc = (inpCoords) => {\n\t\tsetPolygon(inpCoords);\n\t};\n\tconst SetCombineConstraintsFunc = () => {\n\t\tsetCombinedConstraints({ ...constraints, polygon });\n\t\tGenerateSolution();\n\t};\n\n\t// POST\n\tconst GenerateSolution = async () => {\n\t\t// let url = 'http://localhost:5500/api/post/composed_solution';\n\t\tlet url = 'https://apipw2.azurewebsites.net/api/post/composed_solution';\n\t\tconst res = await fetch(url, {\n\t\t\tmethod: 'post',\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tbody: JSON.stringify(combinedConstraints),\n\t\t});\n\t\tconst data = await res.json();\n\t\tsetSolverData(data);\n\t};\n\n\treturn (\n\t\t<div className='container'>\n\t\t\t<h1>\n\t\t\t\t<b>Architecture & Urban Design Client</b>\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t</h1>\n\t\t\t<br />\n\n\t\t\t<Header\n\t\t\t\ttitle='Input constraints'\n\t\t\t\tshow={showConstraints}\n\t\t\t\tonClickx={() => {\n\t\t\t\t\tsetShowConstraints(!showConstraints);\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t{showConstraints && <Constraints onGetConstraints={SetConstraintsFunc} />}\n\n\t\t\t<Header\n\t\t\t\ttitle='Draw the site on a map'\n\t\t\t\tshow={showMap}\n\t\t\t\tonClickx={() => {\n\t\t\t\t\tsetShowMap(!showMap);\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t{showMap && <Map onGetMapPolyCoords={SetMapCoordFunc} />}\n\n\t\t\t<HeaderExec\n\t\t\t\ttitle='Generate a solution'\n\t\t\t\tbtnTitle='Process'\n\t\t\t\tonClickx={() => {\n\t\t\t\t\tSetCombineConstraintsFunc();\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<Header\n\t\t\t\ttitle='View results'\n\t\t\t\tshow={showViewer}\n\t\t\t\tonClickx={() => {\n\t\t\t\t\tsetShowViewer(!showViewer);\n\t\t\t\t\tlet div = document.getElementById('viewerDiv3d');\n\t\t\t\t\twhile (div.children.length > 0) {\n\t\t\t\t\t\tdiv.removeChild(div.firstChild);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t{showViewer && <Viewer3d dataFromServerInp={solverData} />}\n\t\t\t<div id='viewerDiv3d'></div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}